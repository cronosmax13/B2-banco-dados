{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Faculdade\\\\4 Termo\\\\2 Ter\\xE7a-Feira\\\\Banco de Dados ll\\\\B2\\\\CrudFinal - Copia\\\\CrudFinal - Copia\\\\front-end\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from \"react\";\n\n// Criação do contexto de autenticação com um objeto vazio como valor inicial\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({});\n\n// Componente Provider que irá envolver a aplicação e fornecer o contexto de autenticação\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  // Estado para armazenar os dados do usuário\n  // Inicializa verificando se existe um usuário salvo no localStorage\n  const [user, setUser] = useState(() => {\n    const storagedUser = localStorage.getItem(\"usuario\");\n    return storagedUser ? JSON.parse(storagedUser) : null;\n  });\n\n  // Função para realizar o login do usuário\n  const signIn = async (email, senha) => {\n    try {\n      const response = await fetch(\"http://localhost:8000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          senha\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.mensagem || \"Erro ao fazer login\");\n      }\n      const data = await response.json();\n      if (data.erro) {\n        throw new Error(data.mensagem);\n      }\n      setUser(data.usuario);\n      localStorage.setItem(\"usuario\", JSON.stringify(data.usuario));\n      return data;\n    } catch (error) {\n      console.error(\"Erro no login:\", error);\n      throw new Error(error.message || \"Erro ao fazer login\");\n    }\n  };\n\n  // Função para realizar o logout do usuário\n  const signOut = () => {\n    // Remove os dados do usuário do localStorage\n    localStorage.removeItem(\"usuario\");\n    // Limpa o estado do usuário\n    setUser(null);\n  };\n\n  // Retorna o Provider com os valores que serão disponibilizados para a aplicação\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      signed: !!user,\n      user,\n      signIn,\n      signOut\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook personalizado para facilitar o uso do contexto de autenticação\n_s(AuthProvider, \"7lYNj6qxmDCFyg5gjd3Qbjghaq0=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storagedUser","localStorage","getItem","JSON","parse","signIn","email","senha","response","fetch","method","headers","body","stringify","ok","errorData","json","Error","mensagem","data","erro","usuario","setItem","error","console","message","signOut","removeItem","Provider","value","signed","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/User/Documents/Faculdade/4 Termo/2 Terça-Feira/Banco de Dados ll/B2/CrudFinal - Copia/CrudFinal - Copia/front-end/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from \"react\";\r\n\r\n// Criação do contexto de autenticação com um objeto vazio como valor inicial\r\nconst AuthContext = createContext({});\r\n\r\n// Componente Provider que irá envolver a aplicação e fornecer o contexto de autenticação\r\nexport const AuthProvider = ({ children }) => {\r\n  // Estado para armazenar os dados do usuário\r\n  // Inicializa verificando se existe um usuário salvo no localStorage\r\n  const [user, setUser] = useState(() => {\r\n    const storagedUser = localStorage.getItem(\"usuario\");\r\n    return storagedUser ? JSON.parse(storagedUser) : null;\r\n  });\r\n\r\n  // Função para realizar o login do usuário\r\n  const signIn = async (email, senha) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email, senha }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.mensagem || \"Erro ao fazer login\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.erro) {\r\n        throw new Error(data.mensagem);\r\n      }\r\n\r\n      setUser(data.usuario);\r\n      localStorage.setItem(\"usuario\", JSON.stringify(data.usuario));\r\n      return data;\r\n    } catch (error) {\r\n      console.error(\"Erro no login:\", error);\r\n      throw new Error(error.message || \"Erro ao fazer login\");\r\n    }\r\n  };\r\n\r\n  // Função para realizar o logout do usuário\r\n  const signOut = () => {\r\n    // Remove os dados do usuário do localStorage\r\n    localStorage.removeItem(\"usuario\");\r\n    // Limpa o estado do usuário\r\n    setUser(null);\r\n  };\r\n\r\n  // Retorna o Provider com os valores que serão disponibilizados para a aplicação\r\n  return (\r\n    <AuthContext.Provider value={{ signed: !!user, user, signIn, signOut }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook personalizado para facilitar o uso do contexto de autenticação\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  return context;\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC,CAAC,CAAC;;AAErC;AACA,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C;EACA;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,MAAM;IACrC,MAAMU,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IACpD,OAAOF,YAAY,GAAGG,IAAI,CAACC,KAAK,CAACJ,YAAY,CAAC,GAAG,IAAI;EACvD,CAAC,CAAC;;EAEF;EACA,MAAMK,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,KAAK,KAAK;IACrC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAET,IAAI,CAACU,SAAS,CAAC;UAAEP,KAAK;UAAEC;QAAM,CAAC;MACvC,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,QAAQ,IAAI,qBAAqB,CAAC;MAC9D;MAEA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAIG,IAAI,CAACC,IAAI,EAAE;QACb,MAAM,IAAIH,KAAK,CAACE,IAAI,CAACD,QAAQ,CAAC;MAChC;MAEAnB,OAAO,CAACoB,IAAI,CAACE,OAAO,CAAC;MACrBpB,YAAY,CAACqB,OAAO,CAAC,SAAS,EAAEnB,IAAI,CAACU,SAAS,CAACM,IAAI,CAACE,OAAO,CAAC,CAAC;MAC7D,OAAOF,IAAI;IACb,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC,MAAM,IAAIN,KAAK,CAACM,KAAK,CAACE,OAAO,IAAI,qBAAqB,CAAC;IACzD;EACF,CAAC;;EAED;EACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB;IACAzB,YAAY,CAAC0B,UAAU,CAAC,SAAS,CAAC;IAClC;IACA5B,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;;EAED;EACA,oBACEN,OAAA,CAACC,WAAW,CAACkC,QAAQ;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,CAAC,CAAChC,IAAI;MAAEA,IAAI;MAAEO,MAAM;MAAEqB;IAAQ,CAAE;IAAA9B,QAAA,EACpEA;EAAQ;IAAAmC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAArC,EAAA,CAvDaF,YAAY;AAAAwC,EAAA,GAAZxC,YAAY;AAwDzB,OAAO,SAASyC,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACxB,MAAMC,OAAO,GAAG/C,UAAU,CAACG,WAAW,CAAC;EACvC,OAAO4C,OAAO;AAChB;AAACD,GAAA,CAHeD,OAAO;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
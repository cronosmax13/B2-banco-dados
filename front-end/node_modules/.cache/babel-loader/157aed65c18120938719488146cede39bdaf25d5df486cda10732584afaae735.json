{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Faculdade\\\\4 Termo\\\\2 Ter\\xE7a-Feira\\\\Banco de Dados ll\\\\B2\\\\CrudFinal - Copia\\\\CrudFinal - Copia\\\\front-end\\\\src\\\\pages\\\\Login\\\\index.js\",\n  _s = $RefreshSig$();\n// Importação das dependências necessárias\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n\n// Importação dos componentes estilizados\nimport { Container, ConteudoForm, Form, Label, Input, ButtonSuccess, AlertSuccess, AlertDanger } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  // Hook para navegação entre páginas\n  const history = useHistory();\n  // Hook personalizado para autenticação\n  const {\n    signIn\n  } = useAuth();\n\n  // Estado para armazenar as credenciais do usuário\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    senha: \"\"\n  });\n\n  // Estado para controlar mensagens de status/erro\n  const [status, setStatus] = useState({\n    type: \"\",\n    mensagem: \"\"\n  });\n\n  // Função que atualiza o estado das credenciais conforme o usuário digita\n  const valorInput = e => setCredentials({\n    ...credentials,\n    [e.target.name]: e.target.value\n  });\n\n  // Função que gerencia o processo de login\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:8000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: credentials.email,\n          senha: credentials.senha\n        })\n      });\n      const data = await response.json();\n      if (data && !data.erro) {\n        // Salva o email\n        localStorage.setItem(\"email\", credentials.email);\n\n        // Salva os dados do usuário\n        localStorage.setItem(\"usuario\", JSON.stringify({\n          nome: data.nome,\n          email: credentials.email\n        }));\n        history.push(\"/\");\n      } else {\n        setStatus({\n          type: \"erro\",\n          mensagem: data.mensagem\n        });\n      }\n    } catch (err) {\n      setStatus({\n        type: \"erro\",\n        mensagem: \"Erro: \" + err.message\n      });\n    }\n  };\n\n  // Renderização do componente\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(ConteudoForm, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), status.type === \"erro\" && /*#__PURE__*/_jsxDEV(AlertDanger, {\n        children: status.mensagem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Digite seu email\",\n          onChange: valorInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          children: \"Senha: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"senha\",\n          placeholder: \"Digite sua senha\",\n          onChange: valorInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonSuccess, {\n          type: \"submit\",\n          children: \"Acessar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"aA8U2BV64K9j4T5hyRZCRvI0q1E=\", false, function () {\n  return [useHistory, useAuth];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useHistory","useAuth","Container","ConteudoForm","Form","Label","Input","ButtonSuccess","AlertSuccess","AlertDanger","jsxDEV","_jsxDEV","Login","_s","history","signIn","credentials","setCredentials","email","senha","status","setStatus","type","mensagem","valorInput","e","target","name","value","handleLogin","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","erro","localStorage","setItem","nome","push","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/Faculdade/4 Termo/2 Terça-Feira/Banco de Dados ll/B2/CrudFinal - Copia/CrudFinal - Copia/front-end/src/pages/Login/index.js"],"sourcesContent":["// Importação das dependências necessárias\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\n// Importação dos componentes estilizados\r\nimport {\r\n  Container,\r\n  ConteudoForm,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  ButtonSuccess,\r\n  AlertSuccess,\r\n  AlertDanger,\r\n} from \"./styles\";\r\n\r\nexport const Login = () => {\r\n  // Hook para navegação entre páginas\r\n  const history = useHistory();\r\n  // Hook personalizado para autenticação\r\n  const { signIn } = useAuth();\r\n\r\n  // Estado para armazenar as credenciais do usuário\r\n  const [credentials, setCredentials] = useState({\r\n    email: \"\",\r\n    senha: \"\",\r\n  });\r\n\r\n  // Estado para controlar mensagens de status/erro\r\n  const [status, setStatus] = useState({\r\n    type: \"\",\r\n    mensagem: \"\",\r\n  });\r\n\r\n  // Função que atualiza o estado das credenciais conforme o usuário digita\r\n  const valorInput = (e) =>\r\n    setCredentials({\r\n      ...credentials,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n  // Função que gerencia o processo de login\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email: credentials.email,\r\n          senha: credentials.senha,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data && !data.erro) {\r\n        // Salva o email\r\n        localStorage.setItem(\"email\", credentials.email);\r\n\r\n        // Salva os dados do usuário\r\n        localStorage.setItem(\r\n          \"usuario\",\r\n          JSON.stringify({\r\n            nome: data.nome,\r\n            email: credentials.email,\r\n          })\r\n        );\r\n\r\n        history.push(\"/\");\r\n      } else {\r\n        setStatus({\r\n          type: \"erro\",\r\n          mensagem: data.mensagem,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      setStatus({\r\n        type: \"erro\",\r\n        mensagem: \"Erro: \" + err.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Renderização do componente\r\n  return (\r\n    <Container>\r\n      <ConteudoForm>\r\n        <h1>Login</h1>\r\n\r\n        {/* Exibe mensagem de erro se houver */}\r\n        {status.type === \"erro\" && <AlertDanger>{status.mensagem}</AlertDanger>}\r\n\r\n        {/* Formulário de login */}\r\n        <Form onSubmit={handleLogin}>\r\n          <Label>Email: </Label>\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Digite seu email\"\r\n            onChange={valorInput}\r\n          />\r\n\r\n          <Label>Senha: </Label>\r\n          <Input\r\n            type=\"password\"\r\n            name=\"senha\"\r\n            placeholder=\"Digite sua senha\"\r\n            onChange={valorInput}\r\n          />\r\n\r\n          <ButtonSuccess type=\"submit\">Acessar</ButtonSuccess>\r\n        </Form>\r\n      </ConteudoForm>\r\n    </Container>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}